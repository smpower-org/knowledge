Waking hour, Repetition hour, Wakefulness, Sleep length, Grade, Day No, RepDate, SleepDate, Score, eFI, Alertness, Circadian, Homeostatic, Element
6.5,23.5,17.0,8.5,5,6661,27.3月.2018,27.3月.2018,100,1.000,0.33,0.74,0.05,Item #8: How can you add a new element to SuperMemo?
6.5,23.5,17.1,8.5,2,6661,27.3月.2018,27.3月.2018,0,0.000,0.33,0.74,0.05,Item #9: How can you learn the elements stored in SuperMemo?
6.5,23.6,17.1,8.5,2,6661,27.3月.2018,27.3月.2018,0,0.000,0.32,0.74,0.05,Item #3: What do you need SuperMemo for?
6.5,23.6,17.1,8.5,5,6661,27.3月.2018,27.3月.2018,100,1.000,0.32,0.73,0.05,Item #7: (js) 用来创建新对象的函数叫做什么函数？
6.5,23.6,17.1,8.5,2,6661,27.3月.2018,27.3月.2018,0,0.000,0.32,0.73,0.05,Item #2: How can you always bring up the Question of the Day dialog?
7.5,9.3,1.8,7.5,4,6662,28.3月.2018,28.3月.2018,100,1.000,0.48,0.90,0.30,Item #2: How can you always bring up the Question of the Day dialog?
7.5,9.3,1.8,7.5,5,6662,28.3月.2018,28.3月.2018,100,1.000,0.48,0.90,0.30,Item #9: How can you learn the elements stored in SuperMemo?
7.5,9.3,1.8,7.5,4,6662,28.3月.2018,28.3月.2018,100,1.000,0.48,0.90,0.30,Item #3: What do you need SuperMemo for?
13.0,13.1,0.1,0.3,4,6664,30.3月.2018,30.3月.2018,100,1.000,0.64,0.73,0.75,Item #11: How can you make a copy of a SuperMemo collection?
13.0,13.1,0.1,0.3,4,6664,30.3月.2018,30.3月.2018,100,1.000,0.64,0.73,0.75,Item #2: How can you always bring up the Question of the Day dialog?
13.0,13.1,0.1,0.3,4,6664,30.3月.2018,30.3月.2018,100,1.000,0.64,0.73,0.75,Item #3: What do you need SuperMemo for?
13.0,13.1,0.1,0.3,4,6664,30.3月.2018,30.3月.2018,100,1.000,0.64,0.73,0.75,Item #9: How can you learn the elements stored in SuperMemo?
9.3,13.1,3.8,8.0,3,6670,05.4月.2018,05.4月.2018,100,1.000,0.64,0.84,0.60,Item #12: (js) window 对象的哪个方法会在指定毫秒数的间隔里重复调用？
9.3,13.1,3.8,8.0,4,6670,05.4月.2018,05.4月.2018,100,1.000,0.64,0.84,0.60,Item #13: (js) window 对象的哪个方法用来实现一个函数在指定的毫秒之后运行？
7.5,16.5,9.0,6.1,3,6674,09.4月.2018,09.4月.2018,100,1.000,0.36,0.40,0.31,Item #11: How can you make a copy of a SuperMemo collection?
7.7,11.1,3.4,6.3,4,6675,10.4月.2018,10.4月.2018,100,1.000,0.70,0.91,0.62,Item #2: How can you always bring up the Question of the Day dialog?
7.7,11.1,3.4,6.3,4,6675,10.4月.2018,10.4月.2018,100,1.000,0.70,0.91,0.62,Item #9: How can you learn the elements stored in SuperMemo?
7.7,11.1,3.4,6.3,3,6675,10.4月.2018,10.4月.2018,100,1.000,0.70,0.91,0.62,Item #3: What do you need SuperMemo for?
8.1,9.8,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.67,0.83,0.78,Item #45: JavaScript:. let arr = [1. 2. 3. 4. 5];. console.log(arr.slice(1. -1));  // 输出？
8.1,9.8,1.7,6.1,5,6677,12.4月.2018,12.4月.2018,100,1.000,0.67,0.83,0.78,Item #34: JavaScript:. var arr = [1. 2. 3];. console.log(arr.join(' '));  // 输出？
8.1,9.8,1.7,6.1,3,6677,12.4月.2018,12.4月.2018,100,1.000,0.67,0.83,0.78,Item #41: JavaScript:. let arr = [1. 2. 3. 4. 5];. arr.slice(0. 3);. console.log(arr);  // 输出？
8.1,9.8,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.67,0.83,0.78,Item #51: JavaScript:. var arr = [1.2.3];. arr.reverse().join();. console.log(arr);  // 输出？
8.1,9.8,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.83,0.78,Item #42: JavaScript:. let arr = ['banana'.'cherry'.'apple'];. arr.sort();. console.log(arr);  // 输出？
8.1,9.8,1.7,6.1,5,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.83,0.77,Item #56: JavaScript:. var arr = [1.2.3];. console.log(arr.join());  // 输出？
8.1,9.8,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.83,0.77,Item #54: JavaScript:. var arr = [1.2.3.4.5];. console.log(arr.slice(0.3));  // 输出？
8.1,9.8,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.83,0.77,Item #38: JavaScript:. let arr = ['a'. 'b'. 'c'];. console.log(arr.concat('d'. 'e'));  // 输出？
8.1,9.8,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.83,0.77,Item #40: JavaScript:. let arr = ['a'. 'b'. 'c'];. console.log(arr.concat(['d'. 'e']. ['f'. 'g']));  // 输出？
8.1,9.8,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #43: JavaScript:. var arr = ['a'. 'b'. 'c'];. console.log(arr.concat(['d'. 'e']));  // 输出？
8.1,9.9,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #55: (js) 根据现有数组 [1. 2. 3] 得到字符串 “1. 2. 3”。
8.1,9.9,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #58: JavaScript:. let arr = ['a'. 'b'. 'c'];. arr.concat('d'. ['e'. ['f'. 'g']]);. console.log(arr);  // 输出？
8.1,9.9,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #61: JavaScript:. let arr = [1. 2. 3. 4. 5];. console.log(arr.slice(-3. -2));  // 输出？
8.1,9.9,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #60: JavaScript:. let arr = [1. 2. 3. 4. 5];. console.log(arr.slice(3));  // 输出？
8.1,9.9,1.7,6.1,5,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #10: JavaScript:. var arr = [1. 2. 3];. console.log(arr.join('. '));  // 输出？
8.1,9.9,1.7,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #49: JavaScript:. var a=[1.2.3];. a.reverse().join();  // 输出？
8.1,9.9,1.8,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #35: JavaScript:. let arr = ['a'. 'b'. 'c'];. console.log(arr.concat('d'. ['e'. ['f'. 'g']]));  // 输出？
8.1,9.9,1.8,6.1,4,6677,12.4月.2018,12.4月.2018,100,1.000,0.68,0.84,0.77,Item #57: JavaScript:. let arr = ['banana'.'cherry'.'apple'];. console.log(arr.sort());  // 输出？
7.6,9.2,1.6,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.69,0.85,0.79,Item #74: JavaScript:. var arr = [1.2.3.4.5.6.7.8];. arr.splice(1.2);. console.log(arr);  // 输出？
7.6,9.2,1.6,6.6,3,6678,13.4月.2018,13.4月.2018,100,1.000,0.69,0.85,0.79,Item #66: (js) concat() 会修改调用的数组吗？
7.6,9.2,1.6,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.69,0.85,0.79,Item #81: JavaScript: . var stack = [];. console.log(stack.push(1.3.5));  // 输出？
7.6,9.2,1.6,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.69,0.85,0.79,Item #77: JavaScript:. var arr = [1.2.3.4.5];. console.log(arr.splice(2.0.'a'.'b'));  // 输出？
7.6,9.3,1.6,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.85,0.78,Item #67: (js) splice() 会修改调用的数组吗？
7.6,9.3,1.6,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.85,0.78,Item #36: JavaScript:. var arr = [1.2.3.4.5.6.7.8];. arr.splice(4);. console.log(arr);  // 输出？
7.6,9.3,1.6,6.6,3,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.85,0.78,Item #79: JavaScript: . var stack = [];. stack.push([1.3.5]);. console.log(stack);  // 输出？
7.6,9.3,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.78,Item #65: (js) Array.join() 方法是____方法的逆向操作，后者是将字符串分割成若干块来创建一个数组。
7.6,9.3,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.78,Item #83: JavaScript: . var stack = [1.3.5];. console.log(stack.pop());  // 输出？
7.6,9.3,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.78,Item #85: JavaScript: . var stack = [];. console.log(stack.push([1.3.5]));  // 输出？
7.6,9.3,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.78,Item #78: JavaScript:. var arr = [1.2.3.4.5];. arr.splice(2.2.['a'.'b']);. console.log(arr);  // 输出？
7.6,9.3,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.78,Item #76: JavaScript:. var arr = [1.2.3.4.5];. arr.splice(2.0.'a'.'b');. console.log(arr);  // 输出？
7.6,9.3,1.7,6.6,2,6678,13.4月.2018,13.4月.2018,0,0.000,0.70,0.86,0.78,Item #37: (js) sort() 方法会修改调用的数组吗？
7.6,9.3,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.78,Item #72: JavaScript:. var arr = [1.2.3.4.5.6.7.8];. console.log(arr.splice(4));  // 输出？
7.6,9.3,1.7,6.6,3,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #75: (js) splice() 第三个及其之后的任意参数是什么意思？
7.6,9.4,1.7,6.6,3,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #71: (js) 调用 splice() 时，若省略第二个参数，将删除数组中的哪些元素？
7.6,9.4,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #70: (js) splice() 第二个参数是什么意思？
7.6,9.4,1.7,6.6,3,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #68: (js) 能够从数组中删除元素、插入元素到数组中或同时完成这两种操作的方法是____(数组方法)。
7.6,9.4,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #84: JavaScript: . var stack = [1.3.5];. stack.pop();. console.log(stack);  // 输出？
7.6,9.4,1.7,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #82: JavaScript: . var stack = [];. stack.push(1.3.5);. console.log(stack);
7.6,9.4,1.7,6.6,5,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #64: (js) 调用 join() 时，若不指定分隔符，则默认使用____(标点符号)来分隔数组的各个元素。
7.6,9.4,1.7,6.6,3,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #63: (js) 调用 slice() 时，若参数中出现负数，该负数表示相对于数组中____(最前/最后)一个元素的位置。
7.6,9.4,1.8,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #73: JavaScript:. var arr = [1.2.3.4.5.6.7.8];. console.log(arr.splice(1.2));  // 输出？
7.6,9.4,1.8,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.86,0.77,Item #69: (js) splice() 第一个参数是什么意思？
7.6,9.4,1.8,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.87,0.77,Item #33: (js) 当不带参数调用 sort() 时，数组元素以____顺序排序。
7.6,9.4,1.8,6.6,4,6678,13.4月.2018,13.4月.2018,100,1.000,0.70,0.87,0.77,Item #62: (js) 当调用 sort() 时，若数组包含 undefined，它们会被排到数组的____(头部/尾部)。
9.5,9.8,0.2,7.5,4,6679,14.4月.2018,14.4月.2018,100,1.000,0.63,0.73,0.94,Item #46: JavaScript:. var arr = [];. arr.unshift(2);. arr.unshift(22);. arr.shift();. console.log(arr);  // 输出？
9.5,9.8,0.2,7.5,4,6679,14.4月.2018,14.4月.2018,100,1.000,0.63,0.73,0.94,Item #89: JavaScript:. var arr = [];. arr.unshift(2);. arr.unshift(22);. console.log(arr.shift());  // 输出？
9.5,9.8,0.2,7.5,5,6679,14.4月.2018,14.4月.2018,100,1.000,0.63,0.73,0.94,Item #7: (js) 用来创建新对象的函数叫做什么函数？
9.5,9.8,0.2,7.5,4,6679,14.4月.2018,14.4月.2018,100,1.000,0.63,0.73,0.94,Item #88: JavaScript:. var arr = [];. arr.unshift(3);. console.log(arr);  // 输出？
9.5,9.8,0.2,7.5,3,6679,14.4月.2018,14.4月.2018,100,1.000,0.63,0.73,0.94,Item #87: JavaScript:. var arr = [];. console.log(arr.unshift(3));  // 输出？
9.5,9.8,0.3,7.5,3,6679,14.4月.2018,14.4月.2018,100,1.000,0.63,0.73,0.94,Item #37: (js) sort() 方法会修改调用的数组吗？
9.5,0.6,15.1,7.5,4,6680,15.4月.2018,15.4月.2018,100,1.000,0.34,0.63,0.14,Item #105: JavaScript:. var data=[1.2.3.4.5];  // 要求和的数组. // 计算数组元素的和值. var sum=0;  // 初始为0. data.forEach(function(value){ sum += value; });  // 将每个值累加到 sum 上. sum;  // =＞ 15 .
1.0,3.0,1.9,3.5,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.42,0.37,0.65,Item #53: JavaScript:. var arr = [1.2.3];. console.log(arr.toLocaleString());  // 输出？
1.0,3.0,1.9,3.5,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.42,0.37,0.65,Item #138: JaavScript:. var arr = [1.2.3];. var produce = arr.reduce(function(x. y) { return x * y; }. 10);  // 数组求积. console.log(produce);  // 输出？
7.3,9.5,2.2,3.8,3,6681,16.4月.2018,16.4月.2018,100,1.000,0.59,0.74,0.74,Item #180: (js) 传递给 Array.forEach() 方法的第一个参数是一个函数，然后 forEach() 使用三个参数调用该函数，分别是：____、____和____。
7.3,9.5,2.2,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.74,0.74,Item #128: JavaScript:. var arr = [1.2.3.4.5];. console.log( arr.every(function(x) { return x < 10; }) );  // 输出？
7.3,9.5,2.2,3.8,5,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.74,0.74,Item #90: (js) 根据数学上的惯例，在空数组上调用 every() 时，every() 返回____(true / false)。
7.3,9.5,2.2,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.74,0.74,Item #175: (js) push() 方法会修改调用的数组吗？
7.3,9.5,2.2,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.74,0.74,Item #39: JavaScript:. var arr = [5.4.3.2.1];. var somevalues = arr.filter(function(x) { return x % 2 === 0; });. console.log(somevalues);  // 输出？
7.3,9.5,2.2,3.8,5,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.74,0.74,Item #132: (js) 根据数学上的惯例，在空数组上调用 some() 时，some() 返回____(true / false)。
7.3,9.5,2.2,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.74,0.74,Item #168: (js) 用对象直接量创建对象时，若对象的属性中有连字符(-)应该怎么表示？
7.3,9.5,2.2,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.74,0.74,Item #126: (js) 现有数组 arr，试压缩其中的空缺。
7.3,9.6,2.2,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.75,0.73,Item #129: JavaScript:. var arr = [1.2.3.4.5];. console.log( arr.every(function(x) { return x < 3; }) );  // 输出？
7.3,9.6,2.2,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.75,0.73,Item #103: JavaScript:. var arr = [1.2.3];. arr.toString();. console.log(arr);  // 输出？
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.75,0.73,Item #123: JavaScript:. var arr = [5.4.3.2.1];. var smallvalues = arr.filter(function(x) { return x < 3; });. console.log(smallvalues);  // 输出？
7.3,9.6,2.3,3.8,5,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.75,0.73,Item #170: (js) 关键字 new 后跟随的函数叫做____。
7.3,9.6,2.3,3.8,5,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.75,0.73,Item #151: (js) 用对象直接量创建对象时，若对象的属性中有空格应该怎么表示？
7.3,9.6,2.3,3.8,5,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.75,0.73,Item #176: (js) pop() 方法会修改调用的数组吗？
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.75,0.73,Item #130: JavaScript:. var arr = [1.2.3.4.5];. console.log( arr.some(function(x) { return x < 3; })  );  // 输出？
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.75,0.73,Item #140: JaavScript:. var arr = [1.2.3.4.5];. var min = arr.reduce(function(x. y) { return (x < y) ? x : y; });  // 求最小值. console.log(min);  // 输出？
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.76,0.73,Item #118: JavaScript:. var arr = [1.2..3];. var newArr = arr.map(function(value) {.   return value * value;. });. console.log(newArr.length);  // 输出？
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.76,0.73,Item #5: JavaScript:. var arr = [1.2..3];. var newArr = arr.map(function(value) {.   return value * value;. });. console.log(newArr);  // 输出？
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.76,0.73,Item #182: (adv) realistically
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.76,0.73,Item #177: （js) 用 splice() 方法删除数组元素时，其返回值是____。
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.76,0.73,Item #104: JavaScript:. var arr = [1.2.3.4.5];. console.log( arr.some(isNaN) );  // 输出？
7.3,9.6,2.3,3.8,3,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.76,0.73,Item #117: (js) map() 会调用修改的数组吗？
7.3,9.6,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.76,0.73,Item #178: (js) 用 splice() 方法插入而不删除数组元素时，其返回值是____。
7.3,9.6,2.3,3.8,3,6681,16.4月.2018,16.4月.2018,100,1.000,0.60,0.76,0.73,Item #146: (js) 构造函数的作用是什么？
7.3,9.7,2.3,3.8,2,6681,16.4月.2018,16.4月.2018,0,0.000,0.60,0.76,0.73,Item #131: JavaScript:. var arr = [1.2.3.4.5];. console.log( arr.some(function(x) { return x % 2 === 0; })  );  // 输出？
7.3,9.7,2.3,3.8,2,6681,16.4月.2018,16.4月.2018,0,0.000,0.61,0.76,0.73,Item #124: (js) filter() 会跳过稀疏数组中缺少的元素吗？
7.3,9.7,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.76,0.73,Item #145: (js) 用对象直接量创建对象时，名/值对之间用____(标点符号)分隔。
7.3,9.7,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.76,0.73,Item #120: JavaScript:. var arr = [1.2.3];. arr.toLocaleString();. console.log(arr);  // 输出？
7.3,9.7,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.76,0.73,Item #137: JaavScript:. var arr = [1.2.3];. var produce = arr.reduce(function(x. y) { return x * y; }. 2);  // 数组求积. console.log(produce);  // 输出？
7.3,9.7,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.76,0.73,Item #136: JaavScript:. var arr = [1.2.3];. var produce = arr.reduce(function(x. y) { return x * y; }. 1);  // 数组求积. console.log(produce);  // 输出？
7.3,9.7,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.76,0.72,Item #94: (js) 现有数组 arr，试压缩其中的空缺并删除其中的 undefined 和 null 元素。
7.3,9.7,2.3,3.8,3,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.77,0.72,Item #179: map() 方法将调用的数组的每个元素传递给指定的函数，并返回一个____，它包含该函数的返回值。
7.3,9.7,2.3,3.8,3,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.77,0.72,Item #174: (js) pop() 方法的返回值是____。
7.3,9.7,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.77,0.72,Item #139: JaavScript:. var arr = [1.2.3.4.5];. var max = arr.reduce(function(x. y) { return (x > y) ? x : y; });  // 求最大值. console.log(max);  // 输出？
7.3,9.7,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.77,0.72,Item #135: JaavScript:. var arr = [1.2.3.4.5];. var sum = arr.reduce(function(x. y) { return x + y; }. 0);  // 数组求和. console.log(sum);  // 输出？
7.3,9.7,2.3,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.77,0.72,Item #149: (js) push() 方法的返回值是____。
7.3,9.7,2.4,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.77,0.72,Item #141: JavaScript:. //在数组中查找所有出现的x，并返回一个包含匹配索引的数组. var arr = [1.2.1.4.6.3.1];. function findall(arr. x) {.   var.     results = [].      // 将要返回的数组.     len = arr.length .
7.3,9.7,2.4,3.8,4,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.77,0.72,Item #125: JavaScript:. var arr = [5.4.3.2.1];. var everyvalues = arr.filter(function(x. i) { return i % 2 === 0; });. console.log(everyvalues);  // 输出？
7.3,9.7,2.4,3.8,5,6681,16.4月.2018,16.4月.2018,100,1.000,0.61,0.77,0.72,Item #119: JavaScript:. var arr = [1.2.3];. console.log(arr.toString());  // 输出？
7.3,9.7,2.4,3.8,2,6681,16.4月.2018,16.4月.2018,0,0.000,0.61,0.77,0.72,Item #96: JavaScript:. var arr = [1.2.3];. var newArr = arr.map(function(value) {.   return value * value;. });. console.log(newArr);  // 输出？
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #194: (n) curtain
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #233: (n) wool
7.5,9.3,1.8,7.0,3,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #213: (js) Array.unshift() 方法的返回值是____。
7.5,9.3,1.8,7.0,3,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #148: (js) Array.reduce() 的第一个参数是____。
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #186: (n) 窗帘
7.5,9.3,1.8,7.0,2,6682,17.4月.2018,17.4月.2018,0,0.000,0.72,0.88,0.77,Item #234: (n) 棉花
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #227: (n) semester
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #228: 学期，半学年
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #205: (js) 通过给 Object.create() 传入参数____可以创建一个没有原型的对象。
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #232: (n) 羊毛
7.5,9.3,1.8,7.0,3,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #192: (phrase) to get out of bed; to leave one’s bed . * This morning I . very quickly because the baby was crying.
7.5,9.3,1.8,7.0,3,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #210: (js) Array.filter() 方法的返回值是____。
7.5,9.3,1.8,7.0,2,6682,17.4月.2018,17.4月.2018,0,0.000,0.72,0.88,0.77,Item #235: (n) cotton
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #116: (js) Array.reduceRight() 按照数组索引____（从低到高 / 从高到低）处理数组。
7.5,9.3,1.8,7.0,2,6682,17.4月.2018,17.4月.2018,0,0.000,0.72,0.88,0.77,Item #231: the top-most. thickest cover for a bed. usually made of feathers or other warm material. * In the winter. they sleep under a very thick comforter. but in the summer they don’t .
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #230: (n) 羽毛
7.5,9.3,1.8,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.72,0.88,0.77,Item #8: How can you add a new element to SuperMemo?
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #214: (js) Array.shift() 方法的返回值是____。
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #220: (js) 通过 in 运算符判断某个属性是否存在于某个对象中时，in 运算符的左侧是____。
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #208: (js) Array.filter() 传递的参数是一个函数，该函数返回值是____。
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #91: (js) 删除数组第一个元素的方法是____。
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #216: (js) Array.indexOf() 和 Array.lastIndexOf() 的第一个参数是____。
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #221: (js) 通过 in 运算符判断某个属性是否存在于某个对象中时，in 运算符的右侧是____。
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #222: (js) 通过 in 运算符判断某个属性是否存在于某个对象中时，若该对象的自有属性或继承属性中包含这个属性则返回____。
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #96: JavaScript:. var arr = [1.2.3];. var newArr = arr.map(function(value) {.   return value * value;. });. console.log(newArr);  // 输出？
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #160: (n) feather
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #212: (js) 在数组头部添加一个或多个元素的方法是____。
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #218: (js) delete 运算符是否能删除继承属性？
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #193: (phrase) to awaken; to stop sleeping . * She always leaves her curtains open so that she . with the sunlight.
7.5,9.6,2.1,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.74,Item #207: (js) Array.reduce() 按照数组索引____（从低到高 / 从高到低）处理数组。
7.5,9.6,2.1,7.0,2,6682,17.4月.2018,17.4月.2018,0,0.000,0.73,0.90,0.74,Item #206: (js) Array.reduce() 的第一个参数是一个化简函数，第二个可选的参数是____。
7.5,9.7,2.2,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.73,Item #211: the layers of fabric that cover a bed; the cloth material that covers a bed and that keep one warm. * When my husband sleeps. he always steals the covers and then I get so .
7.5,9.7,2.2,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.73,Item #229: to manage; to deal with; to control. * Are you sure that you can . taking six classes this semester?
7.5,9.7,2.2,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.73,Item #131: JavaScript:. var arr = [1.2.3.4.5];. console.log( arr.some(function(x) { return x % 2 === 0; })  );  // 输出？
7.5,9.7,2.2,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.73,Item #124: (js) filter() 会跳过稀疏数组中缺少的元素吗？
7.5,9.7,2.2,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.73,Item #204: (js) Array.every() 和 Array.some() 确认了要返回的值后，还会继续遍历数组吗？
7.5,9.7,2.2,7.0,4,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.73,Item #161: (js) 用来检测给定的名字是否是对象的自有属性的方法是____，对于继承属性该方法会返回 false。
7.5,9.7,2.2,7.0,3,6682,17.4月.2018,17.4月.2018,100,1.000,0.73,0.90,0.73,Item #105: JavaScript:. var data=[1.2.3.4.5];  // 要求和的数组. // 计算数组元素的和值. var sum=0;  // 初始为0. data.forEach(function(value){ sum += value; });  // 将每个值累加到 sum 上. sum;  // =＞ 15 .
7.6,9.7,2.0,7.1,2,6683,18.4月.2018,18.4月.2018,0,0.000,0.73,0.90,0.75,Item #45: JavaScript:. let arr = [1. 2. 3. 4. 5];. console.log(arr.slice(1. -1));  // 输出？
7.6,9.7,2.0,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.75,Item #35: JavaScript:. let arr = ['a'. 'b'. 'c'];. console.log(arr.concat('d'. ['e'. ['f'. 'g']]));  // 输出？
7.6,9.7,2.0,7.1,3,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.75,Item #240: (js) Array.slice() 方法的返回值是____。
7.6,9.7,2.0,7.1,5,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.75,Item #34: JavaScript:. var arr = [1. 2. 3];. console.log(arr.join(' '));  // 输出？
7.6,9.7,2.0,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.75,Item #231: the top-most. thickest cover for a bed. usually made of feathers or other warm material. * In the winter. they sleep under a very thick comforter. but in the summer they don’t .
7.6,9.7,2.1,7.1,5,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.75,Item #40: JavaScript:. let arr = ['a'. 'b'. 'c'];. console.log(arr.concat(['d'. 'e']. ['f'. 'g']));  // 输出？
7.6,9.7,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.75,Item #57: JavaScript:. let arr = ['banana'.'cherry'.'apple'];. console.log(arr.sort());  // 输出？
7.6,9.7,2.1,7.1,3,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #235: (n) cotton
7.6,9.7,2.1,7.1,5,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #49: JavaScript:. var a=[1.2.3];. a.reverse().join();  // 输出？
7.6,9.7,2.1,7.1,5,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #10: JavaScript:. var arr = [1. 2. 3];. console.log(arr.join('. '));  // 输出？
7.6,9.7,2.1,7.1,5,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #58: JavaScript:. let arr = ['a'. 'b'. 'c'];. arr.concat('d'. ['e'. ['f'. 'g']]);. console.log(arr);  // 输出？
7.6,9.7,2.1,7.1,5,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #237: (js) try、catch 和 finally 语句块需要用花括号括起来吗？
7.6,9.7,2.1,7.1,2,6683,18.4月.2018,18.4月.2018,0,0.000,0.73,0.90,0.74,Item #42: JavaScript:. let arr = ['banana'.'cherry'.'apple'];. arr.sort();. console.log(arr);  // 输出？
7.6,9.7,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #206: (js) Array.reduce() 的第一个参数是一个化简函数，第二个可选的参数是____。
7.6,9.7,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #239: (js) 现有对象 o，在其自身的属性中或继承的属性中均未找到属性 x，属性访问表达式 o.x 的返回值是什么？
7.6,9.7,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #56: JavaScript:. var arr = [1.2.3];. console.log(arr.join());  // 输出？
7.6,9.7,2.1,7.1,3,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #150: (n) fabric
7.6,9.7,2.1,7.1,3,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #41: JavaScript:. let arr = [1. 2. 3. 4. 5];. arr.slice(0. 3);. console.log(arr);  // 输出？
7.6,9.7,2.1,7.1,3,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #61: JavaScript:. let arr = [1. 2. 3. 4. 5];. console.log(arr.slice(-3. -2));  // 输出？
7.6,9.7,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #60: JavaScript:. let arr = [1. 2. 3. 4. 5];. console.log(arr.slice(3));  // 输出？
7.6,9.7,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #189: (js) Array.reverse() 方法的返回值是____。
7.6,9.7,2.1,7.1,5,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #38: JavaScript:. let arr = ['a'. 'b'. 'c'];. console.log(arr.concat('d'. 'e'));  // 输出？
7.6,9.7,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #236: (n) 织物
7.6,9.7,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #234: (n) 棉花
7.6,9.8,2.1,7.1,2,6683,18.4月.2018,18.4月.2018,0,0.000,0.73,0.90,0.74,Item #51: JavaScript:. var arr = [1.2.3];. arr.reverse().join();. console.log(arr);  // 输出？
7.6,9.8,2.1,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.74,Item #54: JavaScript:. var arr = [1.2.3.4.5];. console.log(arr.slice(0.3));  // 输出？
7.6,9.8,2.2,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.73,Item #238: (js) try/catch/finally 语句中，____从句定义了需要处理的异常所在的代码块。
7.6,9.8,2.2,7.1,5,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.73,Item #43: JavaScript:. var arr = ['a'. 'b'. 'c'];. console.log(arr.concat(['d'. 'e']));  // 输出？
7.6,9.8,2.2,7.1,4,6683,18.4月.2018,18.4月.2018,100,1.000,0.73,0.90,0.73,Item #55: (js) 根据现有数组 [1. 2. 3] 得到字符串 “1. 2. 3”。
8.0,9.4,1.4,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #45: JavaScript:. let arr = [1. 2. 3. 4. 5];. console.log(arr.slice(1. -1));  // 输出？
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #289: 五笔键位
8.0,9.4,1.4,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #257: (js) Array.indexOf() 和 Array.lastIndexOf() 搜索整个数组中具有给定值的元素，当没有找到指定的元素时，返回____。
8.0,9.4,1.4,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #254: (js) 变量的搜索是从函数内到函数外还是从函数外到函数内的？
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #284: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #142: 五笔键位
8.0,9.4,1.4,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #258: (js) Array.lastIndexOf() 搜索数组的顺序是____。
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #301: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #264: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #298: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #313: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #165: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #305: 五笔键位
8.0,9.4,1.4,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #256: (js) Array.indexOf() 和 Array.lastIndexOf() 搜索整个数组中具有给定值的元素，当找到指定的第一个元素时，返回____。
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.86,0.81,Item #297: 五笔键位
8.0,9.4,1.4,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #158: (js) Object.create() 的第一个参数是____。
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #312: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #303: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #270: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #281: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #282: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #311: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #310: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #309: 五笔键位
8.0,9.4,1.4,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #79: JavaScript: . var stack = [];. stack.push([1.3.5]);. console.log(stack);  // 输出？
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #279: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #306: 五笔键位
8.0,9.4,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.81,Item #302: 五笔键位
8.0,9.5,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #247: (js) Array.some() 在什么情况下返回 true ？
8.0,9.5,1.4,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #290: 五笔键位
8.0,9.5,1.4,7.4,2,6684,19.4月.2018,19.4月.2018,0,0.000,0.72,0.87,0.80,Item #260: (js) Array.indexOf() 和 Array.lastIndexOf() 的第二个参数指定了____。
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #296: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #293: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #283: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #292: 五笔键位
8.0,9.5,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #42: JavaScript:. let arr = ['banana'.'cherry'.'apple'];. arr.sort();. console.log(arr);  // 输出？
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #274: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #275: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #308: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #280: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #294: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #278: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #287: 五笔键位
8.0,9.5,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #51: JavaScript:. var arr = [1.2.3];. arr.reverse().join();. console.log(arr);  // 输出？
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #288: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #271: 五笔键位
8.0,9.5,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #224: (js) Array.indexOf() 搜索数组的顺序是____
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #157: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #304: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #299: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #253: (js) Array.every() 在什么情况下返回 true ？
8.0,9.5,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #162: (js) 通过 new Object() 创建的对象继承自____。
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #300: 五笔键位
8.0,9.5,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #255: (js) 通过 Object.create() 创建一个空对象（比如通过 {} 或 new Object() 创建的对象），需要传入____。
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #259: (js) Array.indexOf() 和 Array.lastIndexOf() 第一个参数指定了____。
8.0,9.5,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #85: JavaScript: . var stack = [];. console.log(stack.push([1.3.5]));  // 输出？
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.72,0.87,0.80,Item #272: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.87,0.80,Item #295: 五笔键位
8.0,9.5,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.80,Item #84: JavaScript: . var stack = [1.3.5];. stack.pop();. console.log(stack);  // 输出？
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.80,Item #83: JavaScript: . var stack = [1.3.5];. console.log(stack.pop());  // 输出？
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.80,Item #277: 五笔键位
8.0,9.5,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.80,Item #198: 五笔键位
8.0,9.5,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.80,Item #251: (js) 通过 new Array() 创建的对象的原型是____。
8.0,9.6,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.80,Item #166: (js) Array.some() 在什么情况下返回 false ？
8.0,9.6,1.5,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.79,Item #261: (js) 通过点运算符 (.) 来访问对象属性时，属性名用一个标识符来表示，如可以通过 o.x 来访问对象 o 下的属性 x。这里的属性 x 是数据类型吗？程序可以修改它吗？
8.0,9.6,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.79,Item #276: 五笔键位
8.0,9.6,1.5,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.79,Item #291: 五笔键位
8.0,9.6,1.6,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.79,Item #252: (js) 通过 new Date() 创建的对象的原型是____。
8.0,9.6,1.6,7.4,5,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.79,Item #82: JavaScript: . var stack = [];. stack.push(1.3.5);. console.log(stack);
8.0,9.6,1.6,7.4,3,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.79,Item #273: 五笔键位
8.0,9.6,1.6,7.4,4,6684,19.4月.2018,19.4月.2018,100,1.000,0.73,0.88,0.79,Item #81: JavaScript: . var stack = [];. console.log(stack.push(1.3.5));  // 输出？
8.0,9.7,1.7,7.0,4,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.87,0.78,Item #325: (js) delete 运算符可以删除对象的属性，它的操作数应当是一个____。
8.0,9.7,1.7,7.0,4,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.87,0.78,Item #89: JavaScript:. var arr = [];. arr.unshift(2);. arr.unshift(22);. console.log(arr.shift());  // 输出？
8.0,9.7,1.7,7.0,4,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.87,0.78,Item #78: JavaScript:. var arr = [1.2.3.4.5];. arr.splice(2.2.['a'.'b']);. console.log(arr);  // 输出？
8.0,9.7,1.7,7.0,3,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.87,0.78,Item #87: JavaScript:. var arr = [];. console.log(arr.unshift(3));  // 输出？
8.0,9.7,1.7,7.0,3,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.87,0.78,Item #343: (js) Function.prototype.apply() 接受的第一个参数的作用是____。
8.0,9.7,1.7,7.0,4,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.87,0.78,Item #342: (js) Function.prototype.apply() 接受几个参数？
8.0,9.7,1.7,7.0,4,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.87,0.78,Item #46: JavaScript:. var arr = [];. arr.unshift(2);. arr.unshift(22);. arr.shift();. console.log(arr);  // 输出？
8.0,9.7,1.7,7.0,2,6685,20.4月.2018,20.4月.2018,0,0.000,0.72,0.87,0.78,Item #77: JavaScript:. var arr = [1.2.3.4.5];. console.log(arr.splice(2.0.'a'.'b'));  // 输出？
8.0,9.7,1.7,7.0,2,6685,20.4月.2018,20.4月.2018,0,0.000,0.72,0.87,0.78,Item #344: (js) Function.prototype.apply() 接收的第二个参数是____。
8.0,9.7,1.7,7.0,4,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.87,0.78,Item #88: JavaScript:. var arr = [];. arr.unshift(3);. console.log(arr);  // 输出？
8.0,9.7,1.7,7.0,3,6685,20.4月.2018,20.4月.2018,100,1.000,0.72,0.88,0.77,Item #260: (js) Array.indexOf() 和 Array.lastIndexOf() 的第二个参数指定了____。


------------------- Cumulative data ---------------------
Hours of wakefulness, Average Grade, Repetition cases
0,1000.00,10
1,14100.00,148
2,8300.00,90
3,500.00,5
4, N/A, 0
5, N/A, 0
6, N/A, 0
7, N/A, 0
8, N/A, 0
9,100.00,1
10, N/A, 0
11, N/A, 0
12, N/A, 0
13, N/A, 0
14, N/A, 0
15,100.00,1
16, N/A, 0
17,200.00,5
18, N/A, 0
19, N/A, 0
20, N/A, 0
21, N/A, 0
22, N/A, 0
23, N/A, 0
24, N/A, 0

Repetition cases checked: 260


Please review data carefully and compare it with your sleep logs and repetition history
Report any problems at help2018@supermemo.org or current SuperMemo support address
