<FONT color=#000000 size=5><STRONG>JavaScript:&nbsp;&#21033;&#29992;&#32531;&#23384;&#20195;&#29702;&#35745;&#31639;&#20056;&#31215;</STRONG></FONT></P><PRE lang=javascript class="md-fences md-end-block md-focus" contentEditable=false style='BOX-SIZING: border-box; FONT-SIZE: 0.9em; OVERFLOW: visible; MARGIN-BOTTOM: 15px; BORDER-TOP: rgb(221,221,221) 1px solid; FONT-FAMILY: Consolas, "Liberation Mono", Courier, monospace; BORDER-RIGHT: rgb(221,221,221) 1px solid; WHITE-SPACE: pre; WORD-SPACING: 0px; MARGIN-TOP: 30px; BORDER-BOTTOM: rgb(221,221,221) 1px solid; POSITION: relative !important; TEXT-TRANSFORM: none; FONT-WEIGHT: normal; COLOR: rgb(51,51,51); PADDING-BOTTOM: 6px; FONT-STYLE: normal; TEXT-ALIGN: left; PADDING-TOP: 8px; PADDING-LEFT: 1em; BORDER-LEFT: rgb(221,221,221) 1px solid; ORPHANS: 2; WIDOWS: 2; DISPLAY: block; LETTER-SPACING: normal; PADDING-RIGHT: 1em; BACKGROUND-COLOR: rgb(248,248,248); TEXT-INDENT: 0px; break-inside: avoid; background-size: inherit; background-origin: inherit; background-clip: inherit; border-radius: 3px; font-variant-ligatures: normal; font-variant-caps: normal; -webkit-text-stroke-width: 0px; text-decoration-style: initial; text-decoration-color: initial' mdtype="fences" cid="n0"><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"><SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">let</SPAN> <SPAN class=cm-def style="BOX-SIZING: border-box; COLOR: rgb(0,0,255)">mult</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> <SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">function</SPAN>() {</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp;<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">let</SPAN> <SPAN class=cm-def style="BOX-SIZING: border-box; COLOR: rgb(0,0,255)">a</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> <SPAN class=cm-number style="BOX-SIZING: border-box; COLOR: rgb(17,102,68)">1</SPAN>;</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp;<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">for</SPAN> (<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">let</SPAN> <SPAN class=cm-def style="BOX-SIZING: border-box; COLOR: rgb(0,0,255)">i</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> <SPAN class=cm-number style="BOX-SIZING: border-box; COLOR: rgb(17,102,68)">0</SPAN>, <SPAN class=cm-def style="BOX-SIZING: border-box; COLOR: rgb(0,0,255)">len</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">arguments</SPAN>.<SPAN class=cm-property style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">length</SPAN>; <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">i</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">&lt;</SPAN> <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">len</SPAN>; <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">i</SPAN><SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">++</SPAN>) {</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp; &nbsp;<SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">a</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">a</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">*</SPAN> <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">arguments</SPAN>[<SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">i</SPAN>];</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px">  }</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp;<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">return</SPAN> <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">a</SPAN>;</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px">};</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"><SPAN style="BOX-SIZING: border-box" cm-text="">&#8203;</SPAN></SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"><SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">let</SPAN> <SPAN class=cm-def style="BOX-SIZING: border-box; COLOR: rgb(0,0,255)">proxyMult</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> (<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">function</SPAN>() {</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp;<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">let</SPAN> <SPAN class=cm-def style="BOX-SIZING: border-box; COLOR: rgb(0,0,255)">cache</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> {};</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"><SPAN style="BOX-SIZING: border-box" cm-text="">&#8203;</SPAN></SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp;<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">return</SPAN> <SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">function</SPAN>() {</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp; &nbsp;<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">let</SPAN> <SPAN class=cm-def style="BOX-SIZING: border-box; COLOR: rgb(0,0,255)">args</SPAN> <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> <SPAN class=cm-variable style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">Array</SPAN>.<SPAN class=cm-property style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">prototype</SPAN>.<SPAN class=cm-property style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">join</SPAN>.<SPAN class=cm-property style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">call</SPAN>(<SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">arguments</SPAN>, <SPAN class=cm-string style="BOX-SIZING: border-box; COLOR: rgb(170,17,17)">','</SPAN>);</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp; &nbsp;<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">if</SPAN> (<SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">args</SPAN> <SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">in</SPAN> <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">cache</SPAN>) { <SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">return</SPAN> <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">cache</SPAN>[<SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">args</SPAN>]; }</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp; &nbsp;<SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">cache</SPAN>[<SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">args</SPAN>] <SPAN class=cm-operator style="BOX-SIZING: border-box; COLOR: rgb(152,26,26)">=</SPAN> <SPAN class=cm-variable style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">mult</SPAN>.<SPAN class=cm-property style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">apply</SPAN>(<SPAN class=cm-atom style="BOX-SIZING: border-box; COLOR: rgb(34,17,153)">null</SPAN>, <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">arguments</SPAN>);</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"> &nbsp; &nbsp;<SPAN class=cm-keyword style="BOX-SIZING: border-box; COLOR: rgb(119,0,136)">return</SPAN> <SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">cache</SPAN>[<SPAN class=cm-variable-2 style="BOX-SIZING: border-box; COLOR: rgb(0,85,170)">args</SPAN>];</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px">  };</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px">}());</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"><SPAN style="BOX-SIZING: border-box" cm-text="">&#8203;</SPAN></SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"><SPAN class=cm-variable style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">console</SPAN>.<SPAN class=cm-property style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">log</SPAN>(<SPAN class=cm-variable style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">proxyMult</SPAN>(<SPAN class=cm-number style="BOX-SIZING: border-box; COLOR: rgb(17,102,68)">2</SPAN>,<SPAN class=cm-number style="BOX-SIZING: border-box; COLOR: rgb(17,102,68)">3</SPAN>,<SPAN class=cm-number style="BOX-SIZING: border-box; COLOR: rgb(17,102,68)">4</SPAN>));</SPAN><BR><SPAN role=presentation style="BOX-SIZING: border-box; PADDING-RIGHT: 0px"><SPAN class=cm-variable style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">console</SPAN>.<SPAN class=cm-property style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">log</SPAN>(<SPAN class=cm-variable style="BOX-SIZING: border-box; COLOR: rgb(0,0,0)">proxyMult</SPAN>(<SPAN class=cm-number style="BOX-SIZING: border-box; COLOR: rgb(17,102,68)">2</SPAN>,<SPAN class=cm-number style="BOX-SIZING: border-box; COLOR: rgb(17,102,68)">3</SPAN>,<SPAN class=cm-number style="BOX-SIZING: border-box; COLOR: rgb(17,102,68)">4</SPAN>));</SPAN></PRE>